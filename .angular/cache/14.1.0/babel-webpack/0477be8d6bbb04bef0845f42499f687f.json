{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { faPen, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/components/button/button.component\";\nimport * as i6 from \"@fortawesome/angular-fontawesome\";\n\nfunction LoginFormComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" This field is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginFormComponent_div_9_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" This field should be a email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginFormComponent_div_9_p_1_Template, 2, 0, \"p\", 10);\n    i0.ɵɵtemplate(2, LoginFormComponent_div_9_p_2_Template, 2, 0, \"p\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.email.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.email.hasError(\"email\"));\n  }\n}\n\nfunction LoginFormComponent_div_15_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" This field is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginFormComponent_div_15_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" This field should be greater than 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginFormComponent_div_15_p_1_Template, 2, 0, \"p\", 10);\n    i0.ɵɵtemplate(2, LoginFormComponent_div_15_p_2_Template, 2, 0, \"p\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.password.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.password.hasError(\"minlength\"));\n  }\n}\n\nfunction LoginFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 11);\n    i0.ɵɵtext(2, \" Credentials are invalid \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(formBuilder, router, authService, route) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.route = route;\n      this.form = this.formBuilder.nonNullable.group({\n        email: ['', [Validators.email, Validators.required]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n      this.faPen = faPen;\n      this.faEye = faEye;\n      this.faEyeSlash = faEyeSlash;\n      this.showPassword = false; //estados por defecto de las peticiones lanzadas, creado en un modelo\n\n      this.status = 'init';\n      this.route.queryParamMap.subscribe(params => {\n        const email = params.get('email');\n\n        if (email) {\n          //si viene email por la url\n          this.form.controls.email.setValue(email);\n        }\n      });\n    }\n\n    doLogin() {\n      if (this.form.valid) {\n        this.status = 'loading';\n        const {\n          email,\n          password\n        } = this.form.getRawValue();\n        this.authService.login(email, password).subscribe({\n          next: () => {\n            this.status = 'success';\n            this.router.navigate(['/app']);\n          },\n          error: () => {\n            this.status = 'failed';\n          }\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"text-center\", \"font-bold\", \"py-2\", \"text-gray-700\"], [\"novalidate\", \"\", 1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"relative\"], [\"formControlName\", \"email\", \"placeholder\", \"Enter email\", \"type\", \"email\", 1, \"w-full\", \"rounded\", \"bg-gray-100\", \"border-gray-300\", \"border-2\"], [\"nameInput\", \"\"], [\"type\", \"button\", 1, \"p-2\", \"absolute\", \"right-2\", 3, \"click\"], [3, \"icon\"], [4, \"ngIf\"], [\"formControlName\", \"password\", \"placeholder\", \"Enter password\", 1, \"w-full\", \"rounded\", \"bg-gray-100\", \"border-gray-300\", \"border-2\", 3, \"type\"], [\"typeBtn\", \"submit\", \"color\", \"success\", 3, \"loading\"], [\"class\", \"font-medium text-red-500 text-xs mt-1 ml-1\", 4, \"ngIf\"], [1, \"font-medium\", \"text-red-500\", \"text-xs\", \"mt-1\", \"ml-1\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Log in to Trello\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.doLogin();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"div\", 2);\n        i0.ɵɵelement(5, \"input\", 3, 4);\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return i0.ɵɵresetView(_r0.focus());\n        });\n        i0.ɵɵelement(8, \"fa-icon\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, LoginFormComponent_div_9_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"div\", 2);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_button_click_13_listener() {\n          return ctx.showPassword = !ctx.showPassword;\n        });\n        i0.ɵɵelement(14, \"fa-icon\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, LoginFormComponent_div_15_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, LoginFormComponent_div_16_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementStart(17, \"div\")(18, \"app-btn\", 9);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"icon\", ctx.faPen);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.touched && ctx.form.controls.email.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.showPassword ? ctx.faEye : ctx.faEyeSlash);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.touched && ctx.form.controls.password.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === \"failed\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"loading\", ctx.status === \"loading\");\n      }\n    },\n    dependencies: [i4.NgIf, i5.ButtonComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.FaIconComponent],\n    encapsulation: 2\n  });\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}