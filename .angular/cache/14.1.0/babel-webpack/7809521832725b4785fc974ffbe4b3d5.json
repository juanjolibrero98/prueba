{"ast":null,"code":"import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { CardDialogComponent } from '@boards/components/card-dialog/card-dialog.component';\nimport { FormControl, Validators } from '@angular/forms';\nimport { faClose, faPlus, faEllipsis, faImages } from '@fortawesome/free-solid-svg-icons';\nimport { BACKGROUNDS } from '@models/colors.model';\nimport { BoardDialogComponent } from '@boards/components/board-dialog/board-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@services/boards.service\";\nimport * as i4 from \"@services/cards.service\";\nimport * as i5 from \"@services/lists.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../shared/components/button/button.component\";\nimport * as i8 from \"@angular/cdk/drag-drop\";\nimport * as i9 from \"@fortawesome/angular-fontawesome\";\nimport * as i10 from \"@angular/forms\";\n\nfunction BoardComponent_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const card_r7 = restoredCtx.$implicit;\n      const list_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openDialog(card_r7, list_r3.title));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", card_r7.title, \" \");\n  }\n}\n\nfunction BoardComponent_div_6_app_btn_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-btn\", 19);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_app_btn_9_Template_app_btn_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const list_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openFormCard(list_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 9)(2, \"span\");\n    i0.ɵɵelement(3, \"fa-icon\", 12);\n    i0.ɵɵtext(4, \" Add a card\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h3\", 11);\n    i0.ɵɵelement(6, \"fa-icon\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"icon\", ctx_r5.faPlus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"icon\", ctx_r5.faImages);\n  }\n}\n\nfunction BoardComponent_div_6_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"textarea\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22)(3, \"app-btn\", 23);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_div_10_Template_app_btn_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const list_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.createCard(list_r3));\n    });\n    i0.ɵɵtext(4, \" Add card \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"app-btn\", 19);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_div_10_Template_app_btn_click_5_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const list_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.closeCardForm(list_r3));\n    });\n    i0.ɵɵelement(6, \"fa-icon\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.inputCard);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"icon\", ctx_r6.faClose);\n  }\n}\n\nfunction BoardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h3\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h3\", 11);\n    i0.ɵɵelement(5, \"fa-icon\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 13);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BoardComponent_div_6_Template_div_cdkDropListDropped_6_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.drop($event));\n    });\n    i0.ɵɵtemplate(7, BoardComponent_div_6_div_7_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 15);\n    i0.ɵɵtemplate(9, BoardComponent_div_6_app_btn_9_Template, 7, 2, \"app-btn\", 16);\n    i0.ɵɵtemplate(10, BoardComponent_div_6_div_10_Template, 7, 2, \"div\", 17);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const list_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(list_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r0.faEllipsis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", list_r3.id)(\"cdkDropListData\", list_r3.cards);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", list_r3.cards);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !list_r3.showCardForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", list_r3.showCardForm);\n  }\n}\n\nfunction BoardComponent_app_btn_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-btn\", 24);\n    i0.ɵɵlistener(\"click\", function BoardComponent_app_btn_8_Template_app_btn_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.showListForm = !ctx_r21.showListForm);\n    });\n    i0.ɵɵelement(1, \"fa-icon\", 12);\n    i0.ɵɵtext(2, \" Add another list \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r1.faPlus);\n  }\n}\n\nfunction BoardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 9)(2, \"h3\", 26);\n    i0.ɵɵtext(3, \"Add another list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h3\", 11);\n    i0.ɵɵelement(5, \"fa-icon\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"textarea\", 27);\n    i0.ɵɵelementStart(7, \"div\", 22)(8, \"app-btn\", 23);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_9_Template_app_btn_click_8_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.addList());\n    });\n    i0.ɵɵtext(9, \"Add List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"app-btn\", 19);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_9_Template_app_btn_click_10_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.closeListForm());\n    });\n    i0.ɵɵelement(11, \"fa-icon\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"icon\", ctx_r2.faEllipsis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.inputList);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"icon\", ctx_r2.faClose);\n  }\n}\n\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor(dialog, route, boardsService, cardsService, listsService) {\n      this.dialog = dialog;\n      this.route = route;\n      this.boardsService = boardsService;\n      this.cardsService = cardsService;\n      this.listsService = listsService;\n      this.board = null;\n      this.showListForm = false;\n      this.backgroundColorBoard = BACKGROUNDS;\n      this.faClose = faClose;\n      this.faPlus = faPlus;\n      this.faEllipsis = faEllipsis;\n      this.faImages = faImages;\n      this.inputCard = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required]\n      });\n      this.inputList = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        const id = params.get('id');\n\n        if (id) {\n          this.getBoard(id);\n        }\n      });\n    } //metodo para decir que cuando abandonemos la vista board(el detalle de una pizarra) nos cambie el color del background del navbar\n\n\n    ngOnDestroy() {\n      this.boardsService.setBackgroundColor('sky');\n    }\n\n    drop(event) {\n      //before\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      } //after\n\n\n      const position = this.boardsService.getPosition(event.container.data, event.currentIndex);\n      const card = event.container.data[event.currentIndex];\n      const listId = event.container.id; // el id que tiene la lista a la que se mueve la card\n\n      this.updateCard(card, position, listId);\n    }\n\n    addList() {\n      const title = this.inputList.value;\n\n      if (this.board) {\n        this.listsService.create({\n          title,\n          boardId: this.board.id,\n          position: this.boardsService.getPositionNewCardOrList(this.board.lists)\n        }).subscribe(list => {\n          this.board?.lists.push({ ...list,\n            cards: []\n          });\n          this.closeListForm();\n        });\n      }\n    }\n\n    openDialog(card, listTitle) {\n      const dialogRef = this.dialog.open(CardDialogComponent, {\n        minWidth: '300px',\n        maxWidth: '50%',\n        data: {\n          card: card,\n          listTitle: listTitle\n        }\n      });\n      dialogRef.closed.subscribe(output => {\n        if (output) {\n          console.log(output);\n        }\n      });\n    }\n\n    getBoard(id) {\n      this.boardsService.getBoard(id).subscribe(board => {\n        this.board = board;\n        this.boardsService.setBackgroundColor(this.board.backgroundColor);\n      });\n    } //metodo para actualizar la card, pasandole la card y la posicion a la que se mueve\n    //pasandole listId por si cambia la card de lista que tmb se actualice dicha lista\n\n\n    updateCard(card, position, listId) {\n      this.cardsService.update(card.id, {\n        position,\n        listId\n      }).subscribe(cardUpdate => {\n        console.log(cardUpdate);\n      });\n    } //metodo para saber si se esta creando una nueva card en una lista, así cerrar los otros crear de otras listas\n\n\n    openFormCard(list) {\n      //list.showCardForm = !list.showCardForm;\n      //list: false => todos\n      //list click: true\n      this.inputCard.setValue('');\n\n      if (this.board?.lists) {\n        this.board.lists = this.board.lists.map(iteratorList => {\n          if (iteratorList.id === list.id) {\n            return { ...iteratorList,\n              showCardForm: true\n            };\n          }\n\n          return { ...iteratorList,\n            showCardForm: false\n          };\n        });\n      }\n    }\n\n    createCard(list) {\n      const title = this.inputCard.value;\n\n      if (this.board) {\n        this.cardsService.create({\n          title,\n          listId: list.id,\n          boardId: this.board.id,\n          position: this.boardsService.getPositionNewCardOrList(list.cards)\n        }).subscribe(card => {\n          list.cards.push(card);\n          this.inputCard.setValue('');\n          this.closeCardForm(list);\n        });\n      }\n    }\n\n    closeCardForm(list) {\n      list.showCardForm = false;\n    }\n\n    closeListForm() {\n      this.inputList.setValue('');\n      this.showListForm = false;\n    }\n\n    get backgroundColor() {\n      if (this.board) {\n        const classes = this.backgroundColorBoard[this.board.backgroundColor]; //busca si en la lista de colores tiene el mismo color que el que tiene el board\n\n        return classes ? classes : {}; //si lo tiene añade las clases\n      }\n\n      return {};\n    }\n\n    openDialogBoard(board) {\n      const dialogRef = this.dialog.open(BoardDialogComponent, {\n        minWidth: '300px',\n        maxWidth: '50%',\n        data: {\n          board: board\n        }\n      });\n      dialogRef.closed.subscribe(output => {\n        if (output) {\n          console.log(output);\n        }\n      });\n    }\n\n  }\n\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.Dialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BoardsService), i0.ɵɵdirectiveInject(i4.CardsService), i0.ɵɵdirectiveInject(i5.ListsService));\n  };\n\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[1, \"w-full\", \"h-full\", \"px-4\", \"pb-4\", 3, \"ngClass\"], [1, \"flex\", \"flex-col\", \"h-full\"], [1, \"text-xl\", \"font-bold\", \"text-white\", \"my-4\", \"cursor-pointer\", 3, \"click\"], [\"cdkDropListGroup\", \"\", 1, \"flex\", \"grow\", \"items-start\", \"w-full\", \"h-full\", \"overflow-x-scroll\", \"pb-16\"], [\"class\", \"rounded-[15px] bg-gray-200 w-72 p-2 mr-3 shrink-0\", 4, \"ngFor\", \"ngForOf\"], [1, \"shrink-0\"], [\"color\", \"lightList\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"w-72 rounded-[10px] bg-gray-200 p-2 mr-3 shrink-0\", 4, \"ngIf\"], [1, \"rounded-[15px]\", \"bg-gray-200\", \"w-72\", \"p-2\", \"mr-3\", \"shrink-0\"], [1, \"flex\", \"justify-between\", \"py-1\"], [1, \"text-sm\", \"font-bold\", \"ml-2\", \"text-gray-700\"], [1, \"text-sm\", \"font-bold\", \"ml-2\", \"px-2\"], [3, \"icon\"], [\"cdkDropList\", \"\", 1, \"text-sm\", \"mt-2\", \"min-h-[2.5rem]\", 3, \"id\", \"cdkDropListData\", \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"class\", \"bg-white cursor-grab text-gray-700 shadow p-2 rounded-[10px] mt-2 border-b border-x-gray-300 hover:bg-gray-200 hover:border hover:border-gray-300\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-5\"], [\"color\", \"lightCard\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"w-full\", 4, \"ngIf\"], [\"cdkDrag\", \"\", 1, \"bg-white\", \"cursor-grab\", \"text-gray-700\", \"shadow\", \"p-2\", \"rounded-[10px]\", \"mt-2\", \"border-b\", \"border-x-gray-300\", \"hover:bg-gray-200\", \"hover:border\", \"hover:border-gray-300\", 3, \"click\"], [\"color\", \"lightCard\", 3, \"click\"], [1, \"w-full\"], [\"placeholder\", \"Enter a title for this card...\", 1, \"w-full\", \"rounded\", \"text-xs\", \"border-b-gray-400\", \"border-b-2\", 3, \"formControl\"], [1, \"flex\", \"space-x-2\", \"justify-between\"], [\"color\", \"primary\", 3, \"click\"], [\"color\", \"lightList\", 3, \"click\"], [1, \"w-72\", \"rounded-[10px]\", \"bg-gray-200\", \"p-2\", \"mr-3\", \"shrink-0\"], [1, \"text-sm\", \"font-bold\", \"ml-2\"], [\"placeholder\", \"Enter a title for this list...\", 1, \"w-full\", \"rounded\", \"text-xs\", \"border-b-gray-400\", \"border-b-2\", 3, \"formControl\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h2\", 2);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_h2_click_3_listener() {\n          return ctx.openDialogBoard(ctx.board);\n        });\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, BoardComponent_div_6_Template, 11, 7, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtemplate(8, BoardComponent_app_btn_8_Template, 3, 1, \"app-btn\", 6);\n        i0.ɵɵtemplate(9, BoardComponent_div_9_Template, 12, 3, \"div\", 7);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.backgroundColor);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.board == null ? null : ctx.board.title, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.board == null ? null : ctx.board.lists);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showListForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showListForm);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.ButtonComponent, i8.CdkDropList, i8.CdkDropListGroup, i8.CdkDrag, i9.FaIconComponent, i10.DefaultValueAccessor, i10.NgControlStatus, i10.FormControlDirective],\n    styles: [\".cdk-drop-list-dragging[_ngcontent-%COMP%]   .cdk-drag[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating[_ngcontent-%COMP%]{transition:transform .3s cubic-bezier(0,0,.2,1)}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}