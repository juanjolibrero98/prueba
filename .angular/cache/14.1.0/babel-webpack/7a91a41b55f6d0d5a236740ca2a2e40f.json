{"ast":null,"code":"import { DIALOG_DATA } from '@angular/cdk/dialog';\nimport { faClose, faCheckToSlot, faBars, faUser, faTag, faCheckSquare, faClock } from '@fortawesome/free-solid-svg-icons';\nimport { Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/dialog\";\nimport * as i2 from \"@services/boards.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../shared/components/button/button.component\";\nimport * as i5 from \"@fortawesome/angular-fontawesome\";\nexport let BoardDialogComponent = /*#__PURE__*/(() => {\n  class BoardDialogComponent {\n    constructor(dialogRef, data, boardsService, formBuilder) {\n      this.dialogRef = dialogRef;\n      this.boardsService = boardsService;\n      this.formBuilder = formBuilder;\n      this.faClose = faClose;\n      this.faCheckToSlot = faCheckToSlot;\n      this.faBars = faBars;\n      this.faUser = faUser;\n      this.faTag = faTag;\n      this.faCheckSquare = faCheckSquare;\n      this.faClock = faClock;\n      this.form = this.formBuilder.nonNullable.group({\n        title: ['', [Validators.required]],\n        backgroundColor: new FormControl('sky', {\n          nonNullable: true,\n          validators: [Validators.required]\n        })\n      });\n      this.board = data.board;\n      this.form.controls['title'].setValue(this.board.title);\n      this.form.controls['backgroundColor'].setValue(this.board.backgroundColor);\n    }\n\n    close() {\n      this.dialogRef.close();\n    }\n\n    updateBoard(id) {\n      if (this.form.valid) {\n        const {\n          title,\n          backgroundColor\n        } = this.form.getRawValue();\n        this.boardsService.updateBoard(id, title, backgroundColor).subscribe(board => {\n          this.close();\n          location.reload();\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    }\n\n  }\n\n  BoardDialogComponent.ɵfac = function BoardDialogComponent_Factory(t) {\n    return new (t || BoardDialogComponent)(i0.ɵɵdirectiveInject(i1.DialogRef), i0.ɵɵdirectiveInject(DIALOG_DATA), i0.ɵɵdirectiveInject(i2.BoardsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  BoardDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardDialogComponent,\n    selectors: [[\"app-board-dialog\"]],\n    decls: 47,\n    vars: 2,\n    consts: [[1, \"p-6\", \"bg-gray-100\", \"relative\", \"rounded\", \"shadow\"], [\"type\", \"button\", 1, \"absolute\", \"top-3\", \"right-3\", \"focus:outline-none\", \"p-2\", 3, \"click\"], [3, \"icon\"], [1, \"flex\", \"justify-center\"], [1, \"text-lg\", \"px-4\", \"py-4\", \"font-semibold\", \"text-gray-800\"], [\"novalidate\", \"\", 1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-red-600\"], [1, \"relative\"], [\"formControlName\", \"title\", \"placeholder\", \"Enter title\", \"type\", \"text\", 1, \"w-full\", \"rounded\", \"bg-gray-100\", \"border-gray-300\", \"border-2\"], [1, \"flex\", \"flex-wrap\"], [1, \"flex\", \"items-center\", \"mr-4\"], [\"id\", \"sky-radio\", \"type\", \"radio\", \"value\", \"sky\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-sky-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-sky-500\", \"dark:focus:ring-sky-600\"], [\"for\", \"sky-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"id\", \"yellow-radio\", \"type\", \"radio\", \"value\", \"yellow\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-yellow-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-yellow-500\", \"dark:focus:ring-yellow-600\"], [\"for\", \"yellow-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"id\", \"green-radio\", \"type\", \"radio\", \"value\", \"green\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-green-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-green-500\", \"dark:focus:ring-green-600\"], [\"for\", \"green-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"id\", \"red-radio\", \"type\", \"radio\", \"value\", \"red\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-red-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-red-500\", \"dark:focus:ring-red-600\"], [\"for\", \"red-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"id\", \"violet-radio\", \"type\", \"radio\", \"value\", \"violet\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-violet-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-violet-500\", \"dark:focus:ring-violet-600\"], [\"for\", \"violet-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"id\", \"gray-radio\", \"type\", \"radio\", \"value\", \"gray\", \"name\", \"backgroundColor\", \"formControlName\", \"backgroundColor\", 1, \"w-4\", \"h-4\", \"text-gray-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-gray-500\", \"dark:focus:ring-gray-600\"], [\"for\", \"gray-radio\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"typeBtn\", \"submit\", \"color\", \"primary\"]],\n    template: function BoardDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function BoardDialogComponent_Template_button_click_1_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelement(2, \"fa-icon\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h3\", 4);\n        i0.ɵɵtext(5, \"Update Board\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function BoardDialogComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.updateBoard(ctx.board.id);\n        });\n        i0.ɵɵelementStart(7, \"div\")(8, \"b\");\n        i0.ɵɵtext(9, \"Board title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"span\", 6);\n        i0.ɵɵtext(11, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"b\");\n        i0.ɵɵtext(16, \"Background\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9)(20, \"div\", 10);\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementStart(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Sky\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 10);\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵelementStart(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Yellow\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 10);\n        i0.ɵɵelement(29, \"input\", 15);\n        i0.ɵɵelementStart(30, \"label\", 16);\n        i0.ɵɵtext(31, \"green\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 10);\n        i0.ɵɵelement(33, \"input\", 17);\n        i0.ɵɵelementStart(34, \"label\", 18);\n        i0.ɵɵtext(35, \"red\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 10);\n        i0.ɵɵelement(37, \"input\", 19);\n        i0.ɵɵelementStart(38, \"label\", 20);\n        i0.ɵɵtext(39, \"violet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 10);\n        i0.ɵɵelement(41, \"input\", 21);\n        i0.ɵɵelementStart(42, \"label\", 22);\n        i0.ɵɵtext(43, \"gray\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(44, \"div\")(45, \"app-btn\", 23);\n        i0.ɵɵtext(46, \" Update \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.faClose);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i4.ButtonComponent, i5.FaIconComponent, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n  return BoardDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}