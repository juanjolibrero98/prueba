{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { AuthGuard } from '@guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\"; //añado canActivate: [ AuthGuard ], en este routing de layout(hijo del mencionado en el routing principal)\n//para que lo escuchen tmb cada vez que se cambia entre pag, ya que el otro lo escucha solo 1 vez al cargar la app\n//y asi cuando el token expire expulse al usuario cuando cambie de pag y no solo al refrescar la web f5\n\nconst routes = [{\n  path: '',\n  component: LayoutComponent,\n  children: [{\n    path: '',\n    redirectTo: 'boards',\n    pathMatch: 'full'\n  }, {\n    path: 'boards',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('../boards/boards.module').then(m => m.BoardsModule)\n  }, {\n    path: 'profile',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('../profile/profile.module').then(m => m.ProfileModule)\n  }, {\n    path: 'users',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('../users/users.module').then(m => m.UsersModule)\n  }]\n}];\nexport let LayoutRoutingModule = /*#__PURE__*/(() => {\n  class LayoutRoutingModule {}\n\n  LayoutRoutingModule.ɵfac = function LayoutRoutingModule_Factory(t) {\n    return new (t || LayoutRoutingModule)();\n  };\n\n  LayoutRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: LayoutRoutingModule\n  });\n  LayoutRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), RouterModule]\n  });\n  return LayoutRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}